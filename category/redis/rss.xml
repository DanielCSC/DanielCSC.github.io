<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>云雾散尽 我爱你人尽皆知 • Posts by &#34;redis&#34; category</title>
        <link>https://mfx.icu</link>
        <description>人生海海  山山而川  不过尔尔</description>
        <language>zh-CN</language>
        <pubDate>Mon, 05 Oct 2020 11:24:42 +0800</pubDate>
        <lastBuildDate>Mon, 05 Oct 2020 11:24:42 +0800</lastBuildDate>
        <category>SQL</category>
        <category>JWT</category>
        <category>Celery</category>
        <category>序列化器</category>
        <category>ORM</category>
        <category>OAuth2.0</category>
        <category>jwt</category>
        <category>redis</category>
        <category>vue生命周期</category>
        <category>UI组件</category>
        <category>生产环境部署</category>
        <category>Docker</category>
        <category>Docker_Desktop</category>
        <category>Git</category>
        <item>
            <guid isPermalink="true">https://mfx.icu/2020/10/05/Redis/</guid>
            <title>初步了解--Redis</title>
            <link>https://mfx.icu/2020/10/05/Redis/</link>
            <category>redis</category>
            <pubDate>Mon, 05 Oct 2020 11:24:42 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;redisremote-dictionary-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redisremote-dictionary-server&#34;&gt;#&lt;/a&gt; Redis（Remote Dictionary Server )&lt;/h1&gt;
&lt;h4 id=&#34;简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis (Remote Dictionary Server)，是一个开源的使用 &lt;strong&gt;C 语言编写&lt;/strong&gt;、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的 API。&lt;/p&gt;
&lt;p&gt;Redis 是一个 key-value 存储系统。和 Memcached 类似，它支持存储的 value 类型相对更多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在我们日常的 Web 开发中，都是使用数据库来进行数据的存储，由于一般的系统任务中通常不会存在高并发的情况，所以这样看起来并没有什么问题，可是一旦涉及大数据量的需求，比如一些商品抢购的情景，或者是主页访问量瞬间较大的时候，单一使用数据库来保存数据的系统会因为面向磁盘，磁盘读 / 写速度比较慢的问题而存在严重的性能弊端，一瞬间成千上万的请求到来，需要系统在极短的时间内完成成千上万次的读 / 写操作，这个时候往往不是数据库能够承受的，极其容易造成数据库系统瘫痪，最终导致服务宕机的严重生产问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;nosql技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nosql技术&#34;&gt;#&lt;/a&gt; NoSQL 技术&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;为了克服上述的问题，Web 项目通常会引入 NoSQL 技术，这是一种&lt;strong&gt;基于内存的数据库&lt;/strong&gt;，并且提供一定的持久化功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt; 和&lt;strong&gt; MongoDB&lt;/strong&gt; 是当前使用最广泛的 NoSQL，而就 Redis 技术而言，它的性能十分优越，可以&lt;strong&gt;支持每秒十几万次的读 / 写操作&lt;/strong&gt;，其性能远超数据库，并且还&lt;strong&gt;支持集群、分布式、主从同步等&lt;/strong&gt;配置，原则上可以无限扩展，让更多的数据存储在内存中，更让人欣慰的是它还&lt;strong&gt;支持一定的事务能力&lt;/strong&gt;，这保证了高并发的场景下数据的安全和一致性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;redis-在-web-中的应用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis-在-web-中的应用&#34;&gt;#&lt;/a&gt; Redis 在 Web 中的应用&lt;/h4&gt;
&lt;p&gt;Redis 主要有两个应用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储 &lt;strong&gt;缓存&lt;/strong&gt; 用的数据；&lt;/li&gt;
&lt;li&gt;需要高速读 / 写的场合&lt;strong&gt;使用它快速读 / 写&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来是 Redis 的五大数据类型和常用命令&lt;/p&gt;
&lt;h4 id=&#34;五大数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五大数据类型&#34;&gt;#&lt;/a&gt; 五大数据类型&lt;/h4&gt;
&lt;h6 id=&#34;1string-字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1string-字符串&#34;&gt;#&lt;/a&gt; 1.String（ 字符串）&lt;/h6&gt;
&lt;p&gt;redis 中最基本的数据类型，一个 key 对应一个 value。string 类型是二进制安全的，意思是 redis 的 string 可以包含任何数据。如数字，字符串，jpg 图片或者序列化的对象。&lt;/p&gt;
&lt;h6 id=&#34;2list列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2list列表&#34;&gt;#&lt;/a&gt; 2.List（列表）&lt;/h6&gt;
&lt;p&gt;底层为双向链表，左右两边都可以插入和删除数据，插入和删除的时间复杂度是 O (1), 索引的时间复杂度为 O (n)&lt;/p&gt;
&lt;h6 id=&#34;3hash哈希&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3hash哈希&#34;&gt;#&lt;/a&gt; 3.Hash（哈希）&lt;/h6&gt;
&lt;p&gt;是一个键值 (key=&amp;gt;value) 对集合。 hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。&lt;/p&gt;
&lt;p&gt;应用场景：假设有多个用户及对应的用户信息，可以用来存储以用户 ID 为 key，将用户信息序列化为比如 json 格式做为 value 进行保存。&lt;/p&gt;
&lt;h6 id=&#34;4set集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4set集合&#34;&gt;#&lt;/a&gt; 4.Set（集合）&lt;/h6&gt;
&lt;p&gt;redis 中的 set 是 string 类型的无序集合，集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O (1)。&lt;/p&gt;
&lt;h6 id=&#34;5zsetsorted-set有序集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5zsetsorted-set有序集合&#34;&gt;#&lt;/a&gt; 5.zset（Sorted Set：有序集合）&lt;/h6&gt;
&lt;p&gt;zset 和 set 一样也是 string 类型元素的集合，保留了集合不能有重复数据的特性，区别是，有序集合中的元素是可以排序的，它给每个元素设置一个 double 类型的分数，作为排序的依据&lt;/p&gt;
&lt;h4 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令&lt;/h4&gt;
&lt;h6 id=&#34;库管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#库管理&#34;&gt;#&lt;/a&gt; 库管理&lt;/h6&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;select &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;			&lt;span class=&#34;token comment&#34;&gt;# 切换库，默认 16 个数据库：0-15，进入 redis 后默认是 0 号库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flushdb				&lt;span class=&#34;token comment&#34;&gt;# 清除当前数据库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flushall			&lt;span class=&#34;token comment&#34;&gt;# 清除所有库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h6 id=&#34;string-字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string-字符串&#34;&gt;#&lt;/a&gt; String（ 字符串）&lt;/h6&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;keys &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;				&lt;span class=&#34;token comment&#34;&gt;# 查询所有的键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dbsize				&lt;span class=&#34;token comment&#34;&gt;# 查询键总数，直接获取 redis 内置的键总数变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;exists key			&lt;span class=&#34;token comment&#34;&gt;# 检查键是否存在，存在返回 1 ，不存在返回 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; key 			&lt;span class=&#34;token comment&#34;&gt;# 删除键，返回结果为成功删除键的个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;expire key second		&lt;span class=&#34;token comment&#34;&gt;# 设置某个 key 的过期时间，在 second 秒后自动删除&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ttl	key			&lt;span class=&#34;token comment&#34;&gt;# 查看被设置有效期的 key，剩余过期时间，单位为秒 -1 为没设置过期时间，-2 为 key 不存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt; key			&lt;span class=&#34;token comment&#34;&gt;# 检查 key 的类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rename key newkey   		&lt;span class=&#34;token comment&#34;&gt;# 重命名 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;randomkey			&lt;span class=&#34;token comment&#34;&gt;# 随机返回一个 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt; key value &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ex&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;px&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;nx&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;xx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;# ex 为键值设置秒级过期时间 px 为毫秒 nx 键必须不存在，用于添加  xx 键必须存在，用于更新  setnx、setex 与 nx、ex 作用相同&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;get key 			&lt;span class=&#34;token comment&#34;&gt;# 获取值 不存在返回 nil&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mset key value			&lt;span class=&#34;token comment&#34;&gt;# 批量添加&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mget key			&lt;span class=&#34;token comment&#34;&gt;# 批量获取 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;append key value		&lt;span class=&#34;token comment&#34;&gt;# 可以想字符串尾部追加 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;strlen key			&lt;span class=&#34;token comment&#34;&gt;# 字符串长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h6 id=&#34;hash哈希&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash哈希&#34;&gt;#&lt;/a&gt; Hash（哈希）&lt;/h6&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hset key field value			&lt;span class=&#34;token comment&#34;&gt;# 设置值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hget key field				&lt;span class=&#34;token comment&#34;&gt;# 获取值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hdel key field 				&lt;span class=&#34;token comment&#34;&gt;# 会删除一个或多个，返回结果为成功删除的 field 的个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hlen key				&lt;span class=&#34;token comment&#34;&gt;# 计算 field 的个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hmget key field value&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;field value&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;# 批量设置 field-value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hmset key field&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;field&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;# 批量获取 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexists key field			&lt;span class=&#34;token comment&#34;&gt;# 判断 field 是否存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hkeys kye				&lt;span class=&#34;token comment&#34;&gt;# 获取所有 field&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hvals kye				&lt;span class=&#34;token comment&#34;&gt;# 获取所有 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hgetall key 				&lt;span class=&#34;token comment&#34;&gt;# 获取所有的 field、value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h6 id=&#34;list列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list列表&#34;&gt;#&lt;/a&gt; List（列表）&lt;/h6&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;RPUSH key value 			&lt;span class=&#34;token comment&#34;&gt;# 将某个值加入到一个 key 列表末尾&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LPUSH key value  			&lt;span class=&#34;token comment&#34;&gt;# 将某个值加入到一个 key 列表头部&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LLEN key  				&lt;span class=&#34;token comment&#34;&gt;# 列表长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LRANGE key start end  			&lt;span class=&#34;token comment&#34;&gt;# 返回列表中某个范围的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LTRIM key start end 			&lt;span class=&#34;token comment&#34;&gt;# 只保留列表中某个范围的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LINDEX key index  			&lt;span class=&#34;token comment&#34;&gt;# 获取列表中特定索引号的值，要注意是 O (n) 复杂度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LSET key index value  			&lt;span class=&#34;token comment&#34;&gt;# 设置列表中某个位置的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h6 id=&#34;set集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set集合&#34;&gt;#&lt;/a&gt; Set（集合）&lt;/h6&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sadd key member &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;member &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;# 返回结果为添加成功的元素个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;srem key member &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;member &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;# 返回结果为删除成功的元素个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;scard key				&lt;span class=&#34;token comment&#34;&gt;# 计算元素的个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sismember key member			&lt;span class=&#34;token comment&#34;&gt;# 判断元素是否在集合中，在返回 1 否则返回 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;srandmember key &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;			&lt;span class=&#34;token comment&#34;&gt;# 随机从集合返回指定个数元素&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;smembers key 				&lt;span class=&#34;token comment&#34;&gt;# 获取集合内所有元素&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
    </channel>
</rss>
